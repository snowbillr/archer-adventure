import { SpriteComponent } from "./sprite-component";

export class InvulnerabilityComponent implements Phecs.Component {
  public isInvulnerable: boolean;

  private scene: Phaser.Scene;
  private sprite: Phaser.GameObjects.Sprite;

  constructor(scene: Phaser.Scene, data: Phecs.EntityData, entity: Phecs.Entity) {
    this.scene = scene;
    this.isInvulnerable = false;
    this.sprite = entity.getComponent(SpriteComponent).sprite;
  }

  makeInvulnerableFor(duration: number) {
    this.makeInvulnerable();

    const timerEvent = this.scene.time.delayedCall(duration, () => {
      this.makeVulnerable();
      timerEvent.destroy();
    });
  }

  makeInvulnerable() {
    this.isInvulnerable = true;
    this.sprite.alpha = 0.5;
  }

  makeVulnerable() {
    this.sprite.alpha = 1;
    this.isInvulnerable = false;
  }

  destroy() {
    delete this.isInvulnerable;
  }
}
